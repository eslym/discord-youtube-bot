{"version":3,"sources":["../src/bot.ts"],"names":[],"mappings":"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","file":"bot.js","sourcesContent":["import {Client, CommandInteraction, Intents} from \"discord.js\";\nimport {REST} from \"@discordjs/rest\";\nimport {Routes} from \"discord-api-types/v9\";\nimport {get as config} from \"./config\";\nimport {SlashCommandBuilder} from \"@discordjs/builders\";\nimport {SearchCommand} from \"./commands/SearchCommand\";\nimport {logger} from \"./logger\";\n\nlet intents = new Intents();\n\nintents.add(\n    Intents.FLAGS.GUILDS,\n    Intents.FLAGS.GUILD_MEMBERS,\n    Intents.FLAGS.GUILD_INTEGRATIONS,\n    Intents.FLAGS.GUILD_MESSAGES\n)\n\nexport const bot = new Client({intents});\n\nlet client = new REST({version: '9'});\nclient.setToken(config('discord.token'));\n\nlet commands = {\n    'search': SearchCommand\n};\n\nexport async function setupCommands() {\n    const appId = config('discord.appId')\n    let route = Routes.applicationCommands(appId);\n    let command = new SlashCommandBuilder()\n        .setDefaultPermission(false)\n        .setName('youtube')\n        .setDescription('Youtube notification services');\n    Object.values(commands).forEach(c => {\n        command.addSubcommand(c.definition);\n    });\n    await client.put(route, {\n        body: [command.toJSON()]\n    });\n}\n\nbot.on('ready', () => {\n    (async () => {\n        let guilds = await bot.guilds.fetch();\n        let cmds = await bot.application.commands.fetch();\n        for (let g of guilds.values()) {\n            let guild = await g.fetch();\n            if (!guild.commands) continue;\n            for (let command of cmds.values()) {\n                try {\n                    await command.permissions.add({\n                        guild,\n                        permissions: [\n                            {\n                                id: guild.ownerId,\n                                type: 'USER',\n                                permission: true,\n                            }\n                        ]\n                    });\n                } catch (err) {\n                    logger.warn(`Failed to set permissions for /${command.name} on ${guild.name}`);\n                }\n            }\n        }\n    })().catch(logger.error);\n});\n\nbot.on('interactionCreate', (interaction) => {\n    if (interaction.isCommand() && interaction.commandName === 'youtube') {\n        let cmd = interaction.options.getSubcommand(true);\n        commands[cmd].handle(interaction).catch(logger.error);\n    }\n});\n"]}