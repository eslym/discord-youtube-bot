{"version":3,"sources":["../src/discord/Button.ts"],"names":[],"mappings":";;;AAAA,2CAAmE;AAGnE,MAAa,MAAM;IAaf,YAAY,IAAiB,EAAE,GAAG,MAAuC;QAZhE,SAAI,GAAyB,yBAAa,CAAC,MAAM,CAAC;QAavD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QACjB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,IAAI,KAAK,WAAW,CAAC,IAAI,EAAE;YAC3B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC5B,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;SAC1B;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;aAAM;YACH,IAAI,CAAC,KAAK,GAAG,KAAqB,CAAC;SACtC;IACL,CAAC;IAED,QAAQ,CAAC,KAAa;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,QAAQ,CAAC,KAAmB;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,WAAW,CAAC,SAAiB;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,WAAW,CAAC,QAAiB;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AA9CD,wBA8CC;AAED,IAAY,WAMX;AAND,WAAY,WAAW;IACnB,mDAAW,CAAA;IACX,uDAAa,CAAA;IACb,mDAAW,CAAA;IACX,iDAAU,CAAA;IACV,6CAAQ,CAAA;AACZ,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB","file":"Button.js","sourcesContent":["import {Component, ComponentType, PartialEmoji} from \"./Component\";\nimport {Snowflake} from \"discord.js\";\n\nexport class Button implements Component{\n    readonly type: ComponentType.BUTTON = ComponentType.BUTTON;\n    style: ButtonStyle;\n    label?: string;\n    emoji?: PartialEmoji;\n    custom_id?: string;\n    url?: string | URL;\n    disabled?: boolean;\n\n    constructor(type: ButtonStyle.PRIMARY | ButtonStyle.SECONDARY | ButtonStyle.SUCCESS | ButtonStyle.DANGER, label: string)\n    constructor(type: ButtonStyle.PRIMARY | ButtonStyle.SECONDARY | ButtonStyle.SUCCESS | ButtonStyle.DANGER, emoji: PartialEmoji)\n    constructor(type: ButtonStyle.LINK, url: string | URL, label: string);\n\n    constructor(type: ButtonStyle, ...params: (string | URL | PartialEmoji)[]) {\n        this.style = type\n        let param = params.shift();\n        if (type === ButtonStyle.LINK) {\n            this.url = param.toString();\n            param = params.shift();\n        }\n        if (typeof param === 'string') {\n            this.label = param;\n        } else {\n            this.emoji = param as PartialEmoji;\n        }\n    }\n\n    setLabel(label: string){\n        this.label = label;\n        return this;\n    }\n\n    setEmoji(emoji: PartialEmoji) {\n        this.emoji = emoji;\n        return this;\n    }\n\n    setCustomId(custom_id: string){\n        this.custom_id = custom_id;\n        return this;\n    }\n\n    setDisabled(disabled: boolean){\n        this.disabled = disabled;\n        return this;\n    }\n}\n\nexport enum ButtonStyle {\n    PRIMARY = 1,\n    SECONDARY = 2,\n    SUCCESS = 3,\n    DANGER = 4,\n    LINK = 5,\n}"]}