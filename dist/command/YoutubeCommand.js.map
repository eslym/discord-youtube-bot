{"version":3,"sources":["../src/command/YoutubeCommand.ts"],"names":[],"mappings":"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","file":"YoutubeCommand.js","sourcesContent":["import {Command} from \"../manager/CommandManager\";\nimport {\n    CommandInteraction, Interaction,\n    MessageActionRow,\n    MessageButton, MessageEmbed,\n    MessageSelectMenu,\n    MessageSelectOptionData, SelectMenuInteraction\n} from \"discord.js\";\nimport {ApplicationCommandTypes, MessageComponentTypes} from \"discord.js/typings/enums\";\nimport {embed} from \"../utils/embed\";\nimport {google, youtube_v3} from \"googleapis\";\nimport Dict = NodeJS.Dict;\nimport Schema$SearchResultSnippet = youtube_v3.Schema$SearchResultSnippet;\nimport Schema$SearchListResponse = youtube_v3.Schema$SearchListResponse;\nimport {logger} from \"../logger\";\n\nfunction limit(str: string, length: number){\n    if(str.length <= length){\n        return str;\n    }\n    return str.slice(0, length - 3) + '...';\n}\n\nfunction buildSearchResult(res: Schema$SearchListResponse): MessageActionRow[]{\n    let select = new MessageSelectMenu()\n        .setCustomId('youtube-search-result')\n        .setOptions(res.items.map(i=>({\n            label: i.snippet.title,\n            description: limit(i.snippet.description, 100),\n            value: i.id.channelId,\n        } as MessageSelectOptionData)))\n        .setPlaceholder('Select a channel to view details.');\n    let prev = new MessageButton()\n        .setStyle('SECONDARY')\n        .setCustomId('youtube-search-prev')\n        .setLabel('Previous Page')\n        .setDisabled(!!res.prevPageToken);\n    let next = new MessageButton()\n        .setStyle('SECONDARY')\n        .setCustomId('youtube-search-next')\n        .setLabel('Next Page')\n        .setDisabled(!!res.nextPageToken);\n    return [\n        new MessageActionRow({components: [select]}),\n        new MessageActionRow({components: [prev, next]}),\n    ];\n}\n\nconst handlers: Dict<(interaction: CommandInteraction) => Promise<unknown>> = {\n    async search(interaction: CommandInteraction){\n        let keyword = interaction.options.getString('keyword', true);\n        await interaction.reply({\n            embeds: [embed.info(`Searching for \"${keyword}\"`)],\n            ephemeral: true,\n        });\n        let res = await google.youtube('v3').search.list({\n            q: keyword, type: ['channel'], part: ['snippet', 'id'], maxResults: 10\n        });\n        if(res.data.pageInfo.totalResults === 0){\n            await interaction.editReply({\n                embeds: [embed.warn(`No search results for \"${keyword}\"`)]\n            });\n            return;\n        }\n        let dict: Dict<Schema$SearchResultSnippet> = Object\n            .fromEntries(res.data.items.map(d => [d.id.channelId, d.snippet]));\n        let message = embed.info(`Search results for ${keyword}`)\n            .setFooter(`${res.data.pageInfo.totalResults} Results`);\n        let reply = await interaction.editReply({\n            embeds: [message],\n            components: buildSearchResult(res.data)\n        });\n        let msg = await interaction.channel.messages.fetch(reply.id);\n        let menuHandler = msg.createMessageComponentCollector({time: 600});\n        menuHandler.on('collect', (i: Interaction) => {\n            if(i.isSelectMenu()){\n                let m = i as SelectMenuInteraction;\n                let selected = dict[m.values[0]];\n                let info = new MessageEmbed()\n                    .setTitle(selected.title)\n                    .setDescription(selected.description)\n                    .setThumbnail(selected.thumbnails.default.url)\n                    .setFooter(selected.channelId)\n                    .setColor(\"GREEN\");\n\n            }\n        });\n        menuHandler.on('end', () => {\n            interaction.editReply({\n                embeds: [embed.warn('Search expired.')]\n            }).then(logger.error);\n        });\n    },\n    async subscribe(interaction: CommandInteraction){\n\n    },\n    async unsubscribe(interaction: CommandInteraction){\n\n    },\n    async list(interaction: CommandInteraction){\n\n    }\n}\n\nconst mentions: Dict<(interaction: CommandInteraction) => Promise<unknown>> = {\n    async add(interaction: CommandInteraction){\n\n    },\n    async remove(interaction: CommandInteraction){\n\n    }\n}\n\nexport const YoutubeCommand: Command = {\n    id: '5c68e897-1737-4fbd-97e0-5e383b54246b',\n    definition: {\n        type: ApplicationCommandTypes.CHAT_INPUT,\n        name: 'youtube',\n        description: 'Operate youtube subscriptions on channel',\n        defaultPermission: false,\n        options: [\n            {\n                name: 'search',\n                type: \"SUB_COMMAND\",\n                description: 'Search a channel on youtube.',\n                options: [\n                    {\n                        type: \"STRING\",\n                        name: 'keyword',\n                        description: 'Keyword for searching.',\n                        required: true,\n                    }\n                ]\n            },\n            {\n                name: 'subscribe',\n                type: \"SUB_COMMAND\",\n                description: 'Search a channel on youtube.',\n                options: [\n                    {\n                        name: 'channel_id',\n                        type: \"STRING\",\n                        description: 'Youtube channel id to subscribe.',\n                        required: true,\n                    },\n                    {\n                        name: 'mention',\n                        type: \"MENTIONABLE\",\n                        description:'Mention when receive notification',\n                        required: false,\n                    }\n                ]\n            },\n            {\n                name: 'unsubscribe',\n                type: \"SUB_COMMAND\",\n                description: 'Search a channel on youtube.',\n                options: [\n                    {\n                        type: \"STRING\",\n                        name: 'channel_id',\n                        description: 'Youtube channel id to unsubscribe.',\n                        required: true,\n                    }\n                ]\n            },\n            {\n                name: 'list',\n                type: \"SUB_COMMAND\",\n                description: 'List the current subscriptions on this channel',\n            },\n            {\n                name: 'mentions',\n                type: \"SUB_COMMAND_GROUP\",\n                description: 'Operation mentions for notifications.',\n                options: [\n                    {\n                        name: 'add',\n                        type: \"SUB_COMMAND\",\n                        description: 'Add mention to a subscription.',\n                        options: [\n                            {\n                                name: 'channel_id',\n                                type: 'STRING',\n                                description: 'Youtube channel id to operate.',\n                                required: true\n                            },\n                            {\n                                name: 'mention',\n                                type: 'MENTIONABLE',\n                                description: 'Mentionable to add.',\n                                required: true\n                            }\n                        ]\n                    },\n                    {\n                        name: 'remove',\n                        type: \"SUB_COMMAND\",\n                        description: 'Remove mention from a subscription.',\n                        options: [\n                            {\n                                name: 'channel_id',\n                                type: 'STRING',\n                                description: 'Youtube channel id to operate.',\n                                required: true\n                            },\n                            {\n                                name: 'mention',\n                                type: 'MENTIONABLE',\n                                description: 'Mentionable to remove.',\n                                required: true\n                            }\n                        ]\n                    }\n                ],\n            }\n        ]\n    },\n    async handle(interaction: CommandInteraction) {\n        let sub = interaction.options.getSubcommand(true);\n        if(interaction.options.getSubcommandGroup(false) === 'mention'){\n            await mentions[sub](interaction);\n            return;\n        }\n        await handlers[sub](interaction);\n    }\n}"]}