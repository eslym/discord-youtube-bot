{"version":3,"sources":["../src/command/PermissionCommand.ts"],"names":[],"mappings":"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","file":"PermissionCommand.js","sourcesContent":["import {Command, CommandManager} from \"../manager/CommandManager\";\nimport {ApplicationCommandTypes} from \"discord.js/typings/enums\";\nimport {ApplicationCommandPermissionData, CommandInteraction} from \"discord.js\";\nimport {YoutubeCommand} from \"./YoutubeCommand\";\nimport {embed} from \"../utils/embed\";\n\nexport const PermissionCommand: Command = {\n    id: '97792e50-428c-47c5-be48-8407aad98cdb',\n    definition: {\n        type: ApplicationCommandTypes.CHAT_INPUT,\n        name: 'perm',\n        description: 'Manage permission for youtube command.',\n        defaultPermission: false,\n        options: [\n            {\n                name: 'allow',\n                type: \"SUB_COMMAND_GROUP\",\n                description: 'Allow a role or user to use youtube command.',\n                options: [\n                    {\n                        name: 'role',\n                        type: 'SUB_COMMAND',\n                        description: 'Allow a role to use youtube command.',\n                        options: [\n                            {\n                                name: 'role',\n                                type: 'ROLE',\n                                description: 'Role to allow to use youtube command.',\n                                required: true,\n                            }\n                        ]\n                    },\n                    {\n                        name: 'user',\n                        type: 'SUB_COMMAND',\n                        description: 'Allow a user to use youtube command.',\n                        options: [\n                            {\n                                name: 'user',\n                                type: 'USER',\n                                description: 'User to allow to use youtube command.',\n                                required: true,\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                name: 'deny',\n                type: \"SUB_COMMAND_GROUP\",\n                description: 'Allow a role or user to use youtube command.',\n                options: [\n                    {\n                        name: 'role',\n                        type: 'SUB_COMMAND',\n                        description: 'Deny a role to use youtube command.',\n                        options: [\n                            {\n                                name: 'role',\n                                type: 'ROLE',\n                                description: 'Role to deny to use youtube command.',\n                                required: true,\n                            }\n                        ]\n                    },\n                    {\n                        name: 'user',\n                        type: 'SUB_COMMAND',\n                        description: 'Deny a user to use youtube command.',\n                        options: [\n                            {\n                                name: 'user',\n                                type: 'USER',\n                                description: 'User to deny to use youtube command.',\n                                required: true,\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    async handle(interaction: CommandInteraction) {\n        let operation = interaction.options.getSubcommandGroup(true);\n        let type = interaction.options.getSubcommand(true);\n        let target: { id } = type === 'user' ?\n            interaction.options.getUser('user') :\n            interaction.options.getRole('role');\n        let remove = type === 'user' ?\n            {\n                users: target.id,\n            } : {\n                roles: target.id,\n            }\n        let perm: ApplicationCommandPermissionData = {\n            id: target.id,\n            type: type === 'user' ? 'USER' : 'ROLE',\n            permission: operation === 'allow',\n        }\n        let cmd = await CommandManager.findCommand(interaction.guild, YoutubeCommand.id);\n        await cmd.permissions.remove(remove);\n        await cmd.permissions.add({\n            permissions: [perm]\n        });\n        await interaction.reply({\n            embeds: [embed.info(`Permission ${operation === 'allow' ? 'allowed' : 'denied'} for ${target}`)],\n            ephemeral: true,\n        });\n    }\n}\n"]}