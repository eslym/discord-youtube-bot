{"version":3,"sources":["../src/utils/catchLog.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAI3C,SAAgB,QAAQ,CAA4C,eAAkB,EAAE,QAAkB,OAAO;IAC7G,OAAO,CAAC,CAAC,GAAG,IAAe,EAAE,EAAE,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QACrD,OAAO,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAC,EAAE,CAAA,eAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAQ,CAAC;AACjD,CAAC;AAJD,4BAIC","file":"catchLog.js","sourcesContent":["import {logger, LogLevel} from \"../logger\";\n\ntype PromiseProvider<T> = (...args: unknown[]) => Promise<T> | T | undefined;\n\nexport function catchLog<T extends PromiseProvider<E>, E = unknown>(promiseProvider: T, level: LogLevel = 'error'): T {\n    return ((...args: unknown[]) => (new Promise((resolve) => {\n        resolve(promiseProvider(...args));\n    })).catch((err)=>logger[level](err))) as any;\n}\n"]}