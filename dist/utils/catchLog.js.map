{"version":3,"sources":["../src/utils/catchLog.ts"],"names":[],"mappings":";;;AAAA,sCAAiC;AAIjC,SAAgB,QAAQ,CAA4C,eAAkB,EAAE,QAA8B,OAAO;IACzH,OAAO,CAAC,CAAC,GAAG,IAAe,EAAE,EAAE,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAC,EAAE;QACpD,OAAO,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,eAAM,CAAC,KAAK,CAAC,CAAC,CAAQ,CAAC;AACrC,CAAC;AAJD,4BAIC","file":"catchLog.js","sourcesContent":["import {logger} from \"../logger\";\n\ntype PromiseProvider<T> = (...args: unknown[]) => Promise<T> | T | undefined;\n\nexport function catchLog<T extends PromiseProvider<E>, E = unknown>(promiseProvider: T, level : keyof typeof logger = 'error'): T {\n    return ((...args: unknown[]) => (new Promise((resolve)=>{\n        resolve(promiseProvider(...args));\n    })).catch(logger[level])) as any;\n}\n"]}