{"version":3,"sources":["../src/commands/SearchCommand.ts"],"names":[],"mappings":"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","file":"SearchCommand.js","sourcesContent":["import {SlashCommandSubcommandBuilder} from \"@discordjs/builders\";\nimport {CommandInteraction, MessageActionRow, MessageSelectMenu, SnowflakeUtil} from \"discord.js\";\nimport {google} from \"googleapis\";\nimport {MessageComponentTypes} from \"discord.js/typings/enums\";\n\nexport const SearchCommand = {\n    definition: new SlashCommandSubcommandBuilder()\n        .setName('search')\n        .setDescription('Search youtube channel')\n        .addStringOption(\n            opt => opt.setName('channel')\n                .setDescription('Keyword to for searching channel')\n                .setRequired(true)\n        ),\n    async handle(interaction: CommandInteraction){\n        let keyword = interaction.options.getString('channel');\n        await interaction.reply(`Searching on \"${keyword}\" on youtube.`);\n        let res = await google.youtube('v3').search.list({\n            q: keyword, type: ['channel'], part: ['snippet', 'id'], maxResults: 10\n        });\n        if(res.data.pageInfo.totalResults === 0){\n            await interaction.followUp(`No search result for \"${keyword}\" :(`);\n            return;\n        }\n        let channels = {};\n        let menu = new MessageSelectMenu();\n        menu.setCustomId('youtube_subscribe_' + SnowflakeUtil.generate());\n        menu.setPlaceholder('Select a channel to subscribe');\n        menu.addOptions(\n            res.data.items.map(item => {\n                channels[item.id.channelId] = item.snippet.title;\n                return {\n                    label: item.snippet.title,\n                    description: item.snippet.description.length > 100 ?\n                        item.snippet.description.slice(0, 97) + '...' :\n                        item.snippet.description,\n                    value: item.id.channelId,\n                };\n            })\n        );\n        let msg = await interaction.followUp({\n            content: `Search results for \"${keyword}\":`,\n            components: [new MessageActionRow().setComponents(menu)]\n        });\n        let message = await interaction.channel.messages.fetch(msg.id);\n        let collector = message.createMessageComponentCollector({\n            componentType: MessageComponentTypes.SELECT_MENU, time: 20000\n        });\n        collector.on('collect', async (imenu)=>{\n            if(imenu.user.id !== interaction.user.id){\n                await imenu.reply(`${interaction.user} you can't do this!`);\n                return;\n            }\n            imenu.reply(imenu.values[0]);\n            menu.setPlaceholder(`Subscribed to ${channels[imenu.values[0]]}`);\n            menu.setDisabled(true);\n            await message.edit({\n                content: `Search results for ${keyword}:`,\n                components: [new MessageActionRow().setComponents(menu)]\n            });\n            collector.removeAllListeners('end');\n        });\n        collector.on('end', ()=>{\n            menu.setPlaceholder(\"Expired.\");\n            menu.setDisabled(true);\n            message.edit({\n                content: `Search results for ${keyword}:`,\n                components: [new MessageActionRow().setComponents(menu)]\n            });\n        });\n    }\n}"]}