{"version":3,"sources":["../src/commands/yt/UnsubscribeCommand.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,kDAAkE;AAElE,6CAAwC;AACxC,4DAAuD;AACvD,4DAAuD;AAEvD,yCAAoC;AAEvB,QAAA,kBAAkB,GAAe;IAC1C,UAAU,EAAE,IAAI,wCAA6B,EAAE;SAC1C,OAAO,CAAC,QAAQ,CAAC;SACjB,cAAc,CAAC,uDAAuD,CAAC;SACvE,eAAe,CACZ,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC;SAC3B,cAAc,CAAC,oCAAoC,CAAC;SACpD,WAAW,CAAC,IAAI,CAAC,CACzB;IAEC,MAAM,CAAC,WAA+B;;YACxC,IAAI,OAAO,GAAgB,WAAW,CAAC,OAAsB,CAAC;YAC9D,IAAI,MAAM,GAAG,MAAM,SAAG,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;YACvD,IAAG,CAAC,MAAM,EAAC;gBACP,OAAO;aACV;YACD,IAAI,EAAC,MAAM,EAAE,YAAY,EAAE,WAAW,EAAC,GAAG,MAAM,CAAC;YACjD,MAAM,2BAAY,CAAC,OAAO,CAAC;gBACvB,KAAK,EAAE;oBACH,eAAe,EAAE,YAAY,CAAC,EAAE;iBACnC;aACJ,CAAC,CAAC;YACH,MAAM,YAAY,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,KAAK,GAAG,MAAM,2BAAY,CAAC,KAAK,CAAC;gBACjC,KAAK,EAAE;oBACH,MAAM,EAAE,MAAM,CAAC,EAAE;iBACpB;aACJ,CAAC,CAAC;YACH,IAAG,KAAK,KAAK,CAAC,EAAC;gBACX,MAAM,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;aACzC;YACD,MAAM,WAAW,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,CAAC,aAAK,CAAC,IAAI,CAAC,gBAAgB,WAAW,CAAC,OAAO,CAAC,KAAK,QAAQ,OAAO,GAAG,CAAC,CAAC,EAAC,CAAC,CAAA;QAChH,CAAC;KAAA;CACJ,CAAA","file":"UnsubscribeCommand.js","sourcesContent":["import {SlashCommandSubcommandBuilder} from \"@discordjs/builders\";\nimport {CommandInteraction, TextChannel} from \"discord.js\";\nimport {embed} from \"../../utils/embed\";\nimport {Subscription} from \"../../models/Subscription\";\nimport {Notification} from \"../../models/Notification\";\nimport {SubCommand} from \"../CommandManager\";\nimport {cmd} from \"../../utils/cmd\";\n\nexport const UnsubscribeCommand: SubCommand = {\n    definition: new SlashCommandSubcommandBuilder()\n        .setName('remove')\n        .setDescription('Unsubscribe a youtube channel from this text channel.')\n        .addStringOption(\n            opt => opt.setName('channel_id')\n                .setDescription('Youtube channel id to unsubscribe.')\n                .setRequired(true)\n        ),\n\n    async handle(interaction: CommandInteraction) {\n        let channel: TextChannel = interaction.channel as TextChannel;\n        let verify = await cmd.verifySubscription(interaction);\n        if(!verify){\n            return;\n        }\n        let {websub, subscription, channelData} = verify;\n        await Notification.destroy({\n            where: {\n                subscription_id: subscription.id,\n            }\n        });\n        await subscription.destroy();\n        let count = await Subscription.count({\n            where: {\n                sub_id: websub.id,\n            }\n        });\n        if(count === 0){\n            await websub.subscribe('unsubscribe');\n        }\n        await interaction.reply({embeds: [embed.info(`Unsubscribed ${channelData.snippet.title} for ${channel}.`)]})\n    }\n}\n"]}