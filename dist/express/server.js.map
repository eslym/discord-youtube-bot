{"version":3,"sources":["../src/express/server.ts"],"names":[],"mappings":";;;AAAA,mCAAmC;AACnC,qCAA+B;AAC/B,2CAA2C;AAC3C,iEAAwD;AACxD,qEAAgE;AAChE,8DAAyD;AACzD,wCAAyC;AAU5B,QAAA,MAAM,GAAG,OAAO,EAAE,CAAC;AAChC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE;IACxB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAC1C,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;QACd,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC,CAAA;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;AAE5C,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG;IACtB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;SACV,IAAI,CAAC;QACF,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,GAAG;QACT,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,eAAe;KAC3B,CAAC,CAAC;AACX,CAAC;AAED,cAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AAElC,cAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAoB,EAAE,GAAqB,EAAE,CAAuB,EAAE,EAAE;IACrF,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;QAClB,IAAI,IAAI,GAAQ;YACZ,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,GAAG;YACT,OAAO,EAAE,2BAA2B;SACvC,CAAC;QACF,IAAI,GAAG,YAAY,6BAAa,EAAE;YAC9B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAA;YACtB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA;SAC7B;aAAM;YACH,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACtB;QACD,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,MAAM,EAAE;YAC9B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;SACxB;QACD,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACpC;AACL,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAA,2BAAU,EAAC,mCAAgB,CAAC,CAAC,SAAS,CAAC,CAAC;AAEtE,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAA,2BAAU,EAAC,mCAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC","file":"server.js","sourcesContent":["import * as express from \"express\";\r\nimport {Router} from \"express\";\r\nimport * as middleware from \"./middleware\";\r\nimport {controller} from \"./controllers/BaseController\";\r\nimport {WebSubController} from \"./controllers/WebSubController\";\r\nimport {HttpException} from \"./exceptions/HttpException\";\r\nimport concat = require(\"concat-stream\");\r\n\r\ndeclare global {\r\n    namespace Express {\r\n        interface Request {\r\n            raw?: Buffer;\r\n        }\r\n    }\r\n}\r\n\r\nexport const server = express();\r\nconst router = Router();\r\n\r\nrouter.use((req, _, next) => {\r\n    req.pipe(concat({encoding: 'buffer'}, (buf) => {\r\n        req.raw = buf;\r\n        next();\r\n    }))\r\n});\r\n\r\nrouter.use(middleware.json, middleware.xml);\r\n\r\nfunction notFound(req, res) {\r\n    res.status(404)\r\n        .json({\r\n            success: false,\r\n            code: 404,\r\n            error: 'not_found',\r\n            message: '404 Not Found',\r\n        });\r\n}\r\n\r\nserver.use('/', router, notFound);\r\n\r\nserver.use((err, req: express.Request, res: express.Response, _: express.NextFunction) => {\r\n    if (!res.headersSent) {\r\n        let body: any = {\r\n            success: false,\r\n            code: 500,\r\n            message: '500 Internal Server Error',\r\n        };\r\n        if (err instanceof HttpException) {\r\n            body.code = err.status\r\n            body.message = err.message\r\n        } else {\r\n            console.error(err);\r\n        }\r\n        if (process.env.DEBUG === 'true') {\r\n            body.exception = err;\r\n        }\r\n        res.status(body.code).json(body);\r\n    }\r\n});\r\n\r\nrouter.get('/websub/:websub', controller(WebSubController).subscribe);\r\n\r\nrouter.post('/websub/:websub', controller(WebSubController).callback);\r\n"]}