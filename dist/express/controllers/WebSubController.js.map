{"version":3,"sources":["../src/express/controllers/WebSubController.ts"],"names":[],"mappings":"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","file":"WebSubController.js","sourcesContent":["import {BaseController} from \"./BaseController\";\nimport {parseStringPromise} from \"xml2js\";\nimport * as moment from \"moment\";\nimport {logger} from \"../../logger\";\nimport {WebSub} from \"../../models/WebSub\";\nimport {Subscription} from \"../../models/Subscription\";\nimport {Notification} from \"../../models/Notification\";\nimport {Op} from \"sequelize\";\nimport {YoutubeVideo} from \"../../models/YoutubeVideo\";\nimport crypto = require(\"crypto\");\n\nexport class WebSubController extends BaseController {\n    async subscribe() {\n        let websub: WebSub = await this.resolveParam<Promise<WebSub>>('websub', (id)=>WebSub.findByPk(id), true);\n        this.response.send(this.request.query['hub.challenge']);\n        let data = await websub.fetchSnippet();\n        let title = data.snippet.title;\n        if (this.request.query['hub.mode'] === 'subscribe') {\n            if (websub.expires_at === null) {\n                logger.info(`[WebSub] Subscribed ${title}`);\n            } else {\n                logger.info(`[WebSub] Renewed ${title}`);\n            }\n            websub.expires_at = moment()\n                .add({second: Number.parseInt(this.request.query['hub.lease_seconds'] as string)})\n                .toDate();\n            websub.save();\n        } else if (this.request.query['hub.mode'] === 'unsubscribe') {\n            logger.info(`[WebSub] Unsubscribed ${title}`);\n            await YoutubeVideo.destroy({\n                where: {\n                    sub_id: websub.id\n                }\n            });\n            let ids = await Subscription.findAll({\n                attributes: ['id'],\n                where: {\n                    sub_id: websub.id,\n                }\n            }).map(s => s.id);\n            await Notification.destroy({\n                where: {\n                    subscription_id: {[Op.in]: ids}\n                }\n            });\n            await Subscription.destroy({\n                where: {\n                    id: {[Op.in]: ids}\n                }\n            })\n            await websub.destroy();\n        }\n    }\n\n    async callback() {\n        let websub: WebSub = await this.resolveParam<Promise<WebSub>>('websub', (id)=>WebSub.findByPk(id), true);\n        this.response.send('OK');\n        this.request.body = await parseStringPromise(this.request.raw.toString());\n        let [algo, sig] = (this.request.headers['x-hub-signature'] as string).split('=', 2);\n        let hmac = crypto.createHmac(algo, websub.secret);\n        hmac.update(this.request.raw);\n        let compute = hmac.digest().toString('hex');\n        if (sig.toLowerCase() !== compute) {\n            logger.warn(`[WebSub] Invalid signature ${sig}`)\n            return;\n        }\n        let data = await websub.fetchSnippet();\n        let title = data.snippet.title;\n        logger.info(`[WebSub] Notification received for ${title}`);\n        if(this.request.body.feed['at:deleted-entry'] !== undefined){\n            let entry = this.request.body.feed['at:deleted-entry'][0];\n            let id = (entry.$.ref as string).split(':').pop();\n            let video = await YoutubeVideo.findOne({\n                where: {\n                    video_id: id,\n                }\n            });\n            if(video){\n                video.deleted_at = moment(entry.$.when).toDate();\n                await video.save();\n                await Notification.destroy({\n                    where: {\n                        video_id: id,\n                    }\n                });\n            }\n        } else {\n            for (let video of this.request.body.feed.entry) {\n                let id = video['yt:videoId'][0] as string;\n                let url = video.link[0].$.href as string;\n                let channelSnippet = await websub.fetchSnippet();\n                let ytVideo = await YoutubeVideo.findByPk(id);\n                if(!ytVideo){\n                    ytVideo = await YoutubeVideo.create({\n                        video_id: id,\n                        sub_id: websub.id,\n                    });\n                    let videoSnippet = await ytVideo.fetchSnippet();\n                    if(videoSnippet.liveStreamingDetails){\n                        if(!videoSnippet.liveStreamingDetails.scheduledStartTime){\n                            continue;\n                        }\n                        let schedule = moment(videoSnippet.liveStreamingDetails.scheduledStartTime);\n                        ytVideo.live_at = schedule.toDate();\n                        ytVideo.save();\n                        for(let sub of await websub.$get('subscriptions')){\n                            await Notification.create({\n                                subscription_id: sub.id,\n                                video_id: id,\n                                scheduled_at: schedule.subtract({minute: 5}).startOf('minute').toDate()\n                            });\n                            await sub.notifyPublish(url, channelSnippet.snippet.title, ytVideo.live_at);\n                        }\n                        continue;\n                    }\n                    for(let sub of await websub.$get('subscriptions')){\n                        await sub.notifyPublish(url, channelSnippet.snippet.title);\n                    }\n                    continue;\n                }\n                if(ytVideo.deleted_at){\n                    continue;\n                }\n                let videoSnippet = await ytVideo.fetchSnippet();\n                if(!videoSnippet.liveStreamingDetails || !videoSnippet.liveStreamingDetails.scheduledStartTime){\n                    continue;\n                }\n                let newLive = moment(videoSnippet.liveStreamingDetails.scheduledStartTime);\n                if(!newLive.isSame(ytVideo.live_at)){\n                    ytVideo.live_at = newLive.toDate();\n                    let notifications = await Notification.findAll({\n                        where: {\n                            video_id: id,\n                        }\n                    });\n                    let schedule = newLive.subtract({minute: 5}).startOf('minute').toDate();\n                    for (let notification of notifications) {\n                        notification.scheduled_at = schedule;\n                        notification.notified_at = null;\n                        await notification.save();\n                        let sub = await notification.$get('subscription');\n                        await sub.notifyReschedule(url, channelSnippet.snippet.title, ytVideo.live_at);\n                    }\n                }\n            }\n        }\n    }\n}"]}