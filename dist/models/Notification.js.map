{"version":3,"sources":["../src/models/Notification.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+DAAiG;AACjG,iDAA4C;AAC5C,yCAAoC;AACpC,qCAAgC;AAChC,2CAAyC;AACzC,wEAAgE;AAGhE,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,4BAAmB;IAGvC,MAAM,CAAC,MAAM,CAAC,IAAY;QAChC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YACV,IAAI,CAAC,EAAE,GAAG,0BAAa,CAAC,QAAQ,EAAS,CAAC;SAC7C;IACL,CAAC;CA0BJ,CAAA;AAvBG;IADC,IAAA,6BAAM,EAAC,EAAC,IAAI,EAAE,qBAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC;;wCAC1C;AAGlB;IADC,IAAA,6BAAM,EAAC,EAAC,IAAI,EAAE,qBAAS,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;;0CACrB;AAI9B;IAFC,IAAA,iCAAU,EAAC,GAAG,EAAE,CAAC,2BAAY,CAAC;IAC9B,IAAA,6BAAM,EAAC,EAAC,IAAI,EAAE,qBAAS,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC;;8CAC3B;AAGxB;IADC,IAAA,6BAAM,EAAC,EAAC,IAAI,EAAE,qBAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC;8BAC3B,IAAI;kDAAC;AAG1B;IADC,IAAA,6BAAM,EAAC,EAAC,IAAI,EAAE,qBAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC;8BAC5B,IAAI;iDAAC;AAGzB;IADC,IAAA,6BAAM,EAAC,EAAC,IAAI,EAAE,qBAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC;8BAC7B,IAAI;gDAAC;AAGxB;IADC,IAAA,6BAAM,EAAC,EAAC,IAAI,EAAE,qBAAS,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC;8BAC7B,IAAI;gDAAC;AAGxB;IADC,IAAA,gCAAS,EAAC,GAAG,EAAE,CAAC,2BAAY,EAAE,EAAC,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAC,CAAC;8BACrF,2BAAY;2CAAC;AA7B3B;IADC,qCAAc;;qCACe,eAAM;;gCAInC;AAPQ,YAAY;IADxB,IAAA,4BAAK,EAAC,EAAC,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAC,CAAC;GAC9F,YAAY,CAiCxB;AAjCY,oCAAY","file":"Notification.js","sourcesContent":["import {BeforeValidate, BelongsTo, Column, ForeignKey, Model, Table} from \"sequelize-typescript\";\r\nimport {YoutubeVideo} from \"./YoutubeVideo\";\r\nimport {DataTypes} from \"sequelize\";\r\nimport {WebSub} from \"./WebSub\";\r\nimport {SnowflakeUtil} from \"discord.js\";\r\nimport {NotificationType} from \"../manager/SubscriptionManager\";\r\n\r\n@Table({tableName: 'notifications', createdAt: 'created_at', updatedAt: 'updated_at', collate: 'utf8_bin'})\r\nexport class Notification extends Model<Notification> {\r\n\r\n    @BeforeValidate\r\n    protected static makeId(self: WebSub) {\r\n        if (!self.id) {\r\n            self.id = SnowflakeUtil.generate() as any;\r\n        }\r\n    }\r\n\r\n    @Column({type: DataTypes.BIGINT.UNSIGNED, primaryKey: true})\r\n    public id: number;\r\n\r\n    @Column({type: DataTypes.STRING, allowNull: false})\r\n    public type: NotificationType;\r\n\r\n    @ForeignKey(() => YoutubeVideo)\r\n    @Column({type: DataTypes.STRING, allowNull: false})\r\n    public video_id: string;\r\n\r\n    @Column({type: DataTypes.DATE, allowNull: true})\r\n    public scheduled_at: Date;\r\n\r\n    @Column({type: DataTypes.DATE, allowNull: true})\r\n    public notified_at: Date;\r\n\r\n    @Column({type: DataTypes.DATE, allowNull: true})\r\n    public created_at: Date;\r\n\r\n    @Column({type: DataTypes.DATE, allowNull: true})\r\n    public updated_at: Date;\r\n\r\n    @BelongsTo(() => YoutubeVideo, {foreignKey: 'video_id', onDelete: 'cascade', onUpdate: 'restrict'})\r\n    public video: YoutubeVideo;\r\n}\r\n"]}