{"version":3,"sources":["../src/manager/PermissionManager.ts"],"names":[],"mappings":"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","file":"PermissionManager.js","sourcesContent":["import {GuildMember, Role} from \"discord.js\";\nimport {MemberPermission} from \"../models/MemberPermission\";\nimport {RolePermission} from \"../models/RolePermission\";\nimport {Op} from \"sequelize\";\n\nexport module PermissionManager {\n    export async function hasPermission(member: GuildMember, permission: string){\n        let check = permission.split('.');\n        let permissions = await computePermissions(member);\n        for (let perm of permissions) {\n            let res = true;\n            if(perm.startsWith('!')){\n                res = false;\n                perm = perm.slice(1);\n            }\n            let parts = perm.split('.');\n            let a, b\n            do {\n                a = parts.shift();\n                b = check.shift();\n                if(a === '*'){\n                    return res;\n                }\n                if(a !== b) {\n                    break;\n                }\n            } while (parts.length > 0 && check.length > 0);\n            if(a === b && parts.length + check.length === 0){\n                return res;\n            }\n        }\n        return false;\n    }\n\n    export async function computePermissions(member: GuildMember) {\n        let personalPermissions = await fetchMemberPermission(member)\n        let roles = member.roles.cache.map(r => r.id);\n        let rolePermissions = await RolePermission.findAll({\n            attributes: ['permission'],\n            where: {\n                discord_role_id: {\n                    [Op.in]: roles\n                }\n            }\n        }).map(p => p.permission);\n        return personalPermissions.concat(...rolePermissions).sort();\n    }\n\n    export function fetchMemberPermission(member: GuildMember) {\n        return MemberPermission.findAll({\n            attributes: ['permission'],\n            where: {\n                discord_guild_id: member.guild.id,\n                discord_member_id: member.id,\n            }\n        }).then(arr => arr.map(p => p.permission));\n    }\n\n    export function fetchRolePermission(role: Role) {\n        return RolePermission.findAll({\n            attributes: ['permission'],\n            where: {\n                discord_role_id: role.id\n            }\n        }).then(arr => arr.map(p => p.permission));\n    }\n\n    export async function detachPersonalPermission(member: GuildMember, permission: string) {\n        await MemberPermission.destroy({\n            where: {\n                discord_guild_id: member.guild.id,\n                discord_member_id: member.id,\n                permission\n            }\n        });\n    }\n\n    export async function detachRolePermission(role: Role, permission: string) {\n        await RolePermission.destroy({\n            where: {\n                discord_role_id: role.id,\n                permission\n            }\n        });\n    }\n\n    export async function attachPersonalPermission(member: GuildMember, permission: string) {\n        let values = {\n            discord_guild_id: member.guild.id,\n            discord_member_id: member.id,\n            permission\n        };\n        let perm = await MemberPermission.count({\n            where: values\n        });\n        if(perm === 0){\n            await MemberPermission.create(values);\n        }\n    }\n\n    export async function attachRolePermission(role: Role, permission){\n        let values = {\n            discord_role_id: role.id,\n            permission\n        };\n        let perm = await RolePermission.count({\n            where: values\n        });\n        if(perm === 0){\n            await RolePermission.create(values);\n        }\n    }\n}\n"]}